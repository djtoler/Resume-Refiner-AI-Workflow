{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Resume Customizer",
        "formDescription": "Tailor resumes to job descriptions",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Resume",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": "pdf",
              "requiredField": true
            },
            {
              "fieldLabel": "Link",
              "requiredField": true
            },
            {
              "fieldLabel": "Email",
              "fieldType": "email",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        0,
        0
      ],
      "id": "e391eb85-6f79-4ba8-a263-7a74a79862c7",
      "name": "On form submission",
      "webhookId": "a0fd0f52-8be7-4c0b-b5c6-901ae7f7e59e"
    },
    {
      "parameters": {
        "url": "={{ $json.Link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        -16
      ],
      "id": "ecceb8c2-d610-44b4-83f4-93f4ec44729a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "Resume",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        208,
        208
      ],
      "id": "166ea27c-67b9-4420-8f6b-5a82cdf09994",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        912,
        16
      ],
      "id": "4f0e9425-2046-45d9-8ce9-2c84464c2d15",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML output from the previous n8n node.\nconst htmlCode = items[0].json.data;\n\n// Replace HTML tags with a newline to get clean, readable text.\nconst plainText = htmlCode.replace(/<[^>]+>/g, '\\n');\n\n// --- Looping, finding keywords, and extracting chunks ---\nconst targetKeywords = ['responsibilities', 'job description', 'qualifications', 'requirements'];\nconst chunkSize = 750;\n\nconst allExtractedChunks = [];\n\nfor (const keyword of targetKeywords) {\n  const keywordMatch = new RegExp('\\\\b' + keyword + '\\\\b', 'i').exec(plainText);\n\n  if (keywordMatch) {\n    const keywordIndex = keywordMatch.index;\n\n    const startIndex = Math.max(0, keywordIndex - Math.floor(chunkSize / 2));\n    const endIndex = Math.min(plainText.length, keywordIndex + Math.floor(chunkSize / 2));\n\n    const extractedChunk = plainText.substring(startIndex, endIndex);\n    const formattedChunk = `---SECTION: ${keyword.toUpperCase()}---\\n${extractedChunk}`;\n    allExtractedChunks.push(formattedChunk);\n  }\n}\n\nconst finalTextBlob = allExtractedChunks.join('\\n\\n');\n\nif (finalTextBlob.length === 0) {\n  // If no keywords were found, fall back to the first part of the document.\n  finalTextBlob = plainText.substring(0, chunkSize * 2);\n}\n\n// Return the combined text as a single JSON item for the next node.\nreturn [{\n  json: {\n    job_details_blob: finalTextBlob\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        -80
      ],
      "id": "34737fe1-404c-4dcb-a1c8-298d2130cda0",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.job_details_blob }}\ntake the jon details above as context to write a bullet list of suggestions for a job canidate to accuratly tailor their resume details below, to fit better with the job description...\n{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1280,
        -16
      ],
      "id": "5dead980-eebd-4ba1-a98b-6f4a2fc6dd75",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo-16k",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo-16k"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1248,
        208
      ],
      "id": "e3123022-4561-49d6-8b4e-cc4f306f8dd9",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "XtOEkeQcxIyAI3nR",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('On form submission').item.json.Email }}",
        "subject": "You're Resume Suggestions",
        "emailType": "text",
        "message": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1712,
        0
      ],
      "id": "62d3512d-1525-4d34-978d-c71f02e3ffc8",
      "name": "Send a message1",
      "webhookId": "0965f13b-dbe9-4b97-ad33-e53937dbc838",
      "credentials": {
        "gmailOAuth2": {
          "id": "xYzxe4QnI8K1OjCT",
          "name": "Gmail account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "70430686-6c4e-4ade-9bcf-754a2581bd40",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bd55da087e845b34da649c85d4b9aad8b024bfa47bee89da9afbf5c8e7614b7e"
  },
  "id": "eVwVxruun9FRJlQD",
  "tags": []
}